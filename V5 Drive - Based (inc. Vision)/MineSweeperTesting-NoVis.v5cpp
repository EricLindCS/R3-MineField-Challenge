{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor Motor1 = motor(PORT1, ratio36_1, true);\n\nmotor Motor3 = motor(PORT3, ratio18_1, false);\n\nmotor Motor4 = motor(PORT4, ratio18_1, true);\n\nmotor Motor2 = motor(PORT2, ratio36_1, false);\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       Eric Lind                                                  */\n/*    Created:      4/10/23                                                   */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nvoid DriveFW(double x, double y){\n  //Drivetrain.driveFor(forward, y * x, mm);\n  Motor3.spinFor(forward, x*y,degrees);\n  Motor4.spinFor(forward, x*y,degrees);\n}\n\nint main() {\n\n  Motor1.setStopping(brake);\n  Motor2.spinToPosition(0,degrees);\n  Motor1.spinToPosition(0,degrees);\n  Motor2.setStopping(coast);\n\n  while(true){\n\n    // ****PRINTSCRN DEBUG CODE STARTS HERE**** //\n    Controller1.Screen.print(Motor2.position(degrees));\n    Controller1.Screen.newLine();\n    // ****PRINTSCRN DEBUG CODE ENDS HERE**** //\n\n    if (Controller1.ButtonX.pressing()){\n      Motor1.setPosition(0, degrees);\n    }\n    if(Controller1.ButtonR1.pressing() && Motor1.position(degrees) < 215){\n    Motor1.spin(forward, 50, percent);\n    }\n    else if(Controller1.ButtonR2.pressing() && Motor1.position(degrees) > -547) {\n    Motor1.spin(reverse, 50, percent);\n    }\n    else if (Controller1.ButtonDown.pressing()){\n    Motor1.spinToPosition(-547, degrees);\n    }\n    else if (Controller1.ButtonLeft.pressing()){\n    Motor1.spinToPosition(-464, degrees);\n    }\n    else if (Controller1.ButtonUp.pressing()){\n    Motor1.spinToPosition(0, degrees);    \n    }\n    else if (Controller1.ButtonRight.pressing()){\n    Motor1.spinToPosition(215, degrees);    \n    }\n    else {\n    Motor1.stop();\n    }\n\n    if(Controller1.ButtonL2.pressing() && Motor2.position(degrees) < 0){\n    Motor2.spin(forward, 50, percent);\n    }\n    else if(Controller1.ButtonL1.pressing() && Motor2.position(degrees) > -172) {\n    Motor2.spin(reverse, 50, percent);\n    }\n    else {\n      Motor2.stop();\n    }\n\n  double k = 0.75;\n   if (Controller1.Axis3.position() > 5 || Controller1.Axis3.position() < -5) {\n      Motor3.spin(reverse, Controller1.Axis3.position()*k, percent);\n      Motor4.spin(reverse, Controller1.Axis3.position()*k, percent);\n      }\n      else {\n        Motor3.stop();\n        Motor4.stop();\n      }\n    \n    if (Controller1.Axis1.position() > 5 || Controller1.Axis1.position() < -5) {\n       Motor3.spin(forward, Controller1.Axis1.position() *k, percent);\n      Motor4.spin(reverse, Controller1.Axis1.position()*k, percent);\n    }\n\n\n  if (Controller1.ButtonA.pressing()){\n    Motor2.spinToPosition(0,degrees);\n  }\n\n\n  } // end drive loop\n} // end main\n","textLanguage":"cpp","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"Motor1","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22},{"port":[3],"name":"Motor3","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[4],"name":"Motor4","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"Motor2","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.5","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}